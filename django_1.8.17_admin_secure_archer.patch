--- views.py	2018-01-23 11:53:00.179201491 +0800
+++ /usr/local/lib/python3.5/site-packages/django/contrib/auth/views.py	2018-01-23 11:58:10.668286140 +0800
@@ -24,7 +24,14 @@
 from django.views.decorators.cache import never_cache
 from django.views.decorators.csrf import csrf_protect
 from django.views.decorators.debug import sensitive_post_parameters
-
+# 账户锁定
+from django.conf import settings
+from sql.sendmail import MailSender
+import datetime
+import logging
+logger = logging.getLogger('default')
+login_failure_counter = {}
+# 账户锁定end
 
 @sensitive_post_parameters()
 @csrf_protect
@@ -41,8 +48,22 @@
 
     if request.method == "POST":
         form = authentication_form(request, data=request.POST)
-        if form.is_valid():
-
+        
+        # 增加账户锁定
+        failed_cnt = settings.LOCK_CNT_THRESHOLD
+        locking_time = settings.LOCK_TIME_THRESHOLD
+        username = request.POST['username']
+        mailSender = MailSender()
+        now_time = datetime.datetime.now()
+        mail_title = 'login inception admin'
+        login_failed_message = ''
+        
+        if username in login_failure_counter and login_failure_counter[username]['cnt'] >= failed_cnt and (now_time - login_failure_counter[username]["last_failure_time"]).seconds <= locking_time:
+            login_failed_message = 'user:{},login /admin failed, account locking...'.format(username)
+            logger.warning(login_failed_message)
+            mailSender.sendEmail(mail_title, login_failed_message, getattr(settings, 'MAIL_REVIEW_SECURE_ADDR'))
+        elif form.is_valid():
+            logger.info('user:{},login /admin success'.format(username))
             # Ensure the user-originating redirection url is safe.
             if not is_safe_url(url=redirect_to, host=request.get_host()):
                 redirect_to = resolve_url(settings.LOGIN_REDIRECT_URL)
@@ -51,6 +72,15 @@
             auth_login(request, form.get_user())
 
             return HttpResponseRedirect(redirect_to)
+        else:
+            if username in login_failure_counter and (now_time - login_failure_counter[username]["last_failure_time"]).seconds <= locking_time:
+                login_failure_counter[username]["cnt"] += 1
+            else:
+                login_failure_counter[username] = {"cnt":1, "last_failure_time": datetime.datetime.now()}
+            login_failed_message = 'user:{},login /admin failed, fail count:{}'.format(username, login_failure_counter[username]["cnt"])
+            logger.warning(login_failed_message)
+            mailSender.sendEmail(mail_title, login_failed_message, getattr(settings, 'MAIL_REVIEW_SECURE_ADDR'))
+        #账户锁定end        
     else:
         form = authentication_form(request)
 
